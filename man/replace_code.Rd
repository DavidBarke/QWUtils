% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_code.R
\name{replace_code}
\alias{replace_code}
\title{Replace Code}
\usage{
replace_code(file, pattern, replacement,
  ending = ".*[.](r|R|s|S|q)([.](lnk|LNK))*$", all = FALSE)
}
\arguments{
\item{file}{A path to an .R script or a directory containing .R scripts.}

\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:stringi-search-regex]{stringi::stringi-search-regex}. Control options with
\code{\link[=regex]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[=fixed]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[=coll]{coll()}} which
respects character matching rules for the specified locale.}

\item{replacement}{A character vector of replacements. Should be either
length one, or the same length as \code{string} or \code{pattern}.
References of the form \code{\\1}, \code{\\2}, etc will be replaced with
the contents of the respective matched group (created by \code{()}).

To perform multiple replacements in each element of \code{string},
pass a named vector (\code{c(pattern1 = replacement1)}) to
\code{str_replace_all}. Alternatively, pass a function to
\code{replacement}: it will be called once for each match and its
return value will be used to replace the match.

To replace the complete string with \code{NA}, use
\code{replacement = NA_character_}.}

\item{all}{If \code{\link[base:logical]{TRUE}}, replacement is done using
\code{\link[stringr:str_replace]{str_replace_all}},
if \code{\link[base:logical]{FALSE}} using \code{\link[stringr]{str_replace}}.}
}
\description{
Replace code in .R scripts. Be sure to use version control as wrong patterns
might result in unintended replacements. Note that you should specify the
pattern by \code{stingr::regex(pattern, dotall = TRUE)} to also match line
terminators (all lines of a script are pasted into a single string).
}
