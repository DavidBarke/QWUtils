% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ControlChart.R
\name{ControlChart}
\alias{ControlChart}
\title{ControlChart}
\description{
R6Class representing a control chart consisting of \code{\link{ControlChartPhase}}s
and \code{\link{ControlChartControlLine}}s.
}
\section{Usage}{

\preformatted{control_chart = ControlChart$new(name, type)

control_chart$add_phase(ControlChartPhase$new(name))

control_chart$get_table()
}
}

\section{Methods}{

\describe{
  \item{\code{new(name, type = c("xbar_R", "xbar_s", "R", "s", "p"))}}{
  Initialize the control chart.
    \tabular{ll}{
      \code{name} \tab \code{\link[base:character]{Character}}. Name of
      the control chart. \cr
      \code{type} \tab \code{\link[base:character]{Character}}. Type of
      the control chart.
    }
  }
  \item{\code{add_control_line(control_line)}}{Add an object of class
    \code{\link{ControlChartControlLine}} to the control chart.
  }
  \item{\code{add_phase(phase)}}{Add an object of class
    \code{link{ControlChartPhase}} to the control chart.
  }
  \item{\code{get_control_line(id = id)}}{Get the control chart's control line
  with \code{id == id}.
  }
  \item{\code{get_control_line_ids()}}{Get all control line ids as a character
  vector.
  }
  \item{\code{get_control_line_values()}}{Get all control line values as a
  numeric vector.
  }
  \item{\code{get_id()}}{Get the control chart's id.
  }
  \item{\code{get_name()}}{Get the control chart's name.
  }
  \item{\code{get_params()}}{Get the parameters of the control charts
  preliminary phases values used to calculate the control line values.
  }
  \item{\code{get_phase(id)}}{Get the control chart's phase with
  \code{id == id}.
  }
  \item{\code{get_phase_ids(preliminary = NULL)}}{Get all phases ids as a
  character vector.
    \tabular{ll}{
      \code{preliminary} \tab If \code{\link[base:NULL]{NULL}} all ids,
        if \code{\link[base:logical]{TRUE}} only ids of preliminary phases,
        if \code{\link[base:logical]{FALSE}} only ids of non-preliminary
        phases are returned.
    }
  }
  \item{\code{get_plot()}}{Get the control chart's plot as a
  \code{\link[plotly:plot_ly]{plotly}} plot.
  }
  \item{\code{get_table(sample_count = c("chart", "phase"),
  preliminary = NULL)}}{Get a \code{\link[tibble:tibble]{tibble}} with
  columns \code{"phase"}, \code{"sample"}, \code{"value"}.
    \tabular{ll}{
      \code{sample_count} \tab If \code{"chart"} samples are counted from
      the perspective of the chart, if \code{"phase"} from the perspective
      of each phase. \cr
      \code{preliminary} \tab If \code{\link[base:NULL]{NULL}} all rows,
        if \code{\link[base:logical]{TRUE}} only rows of preliminary phases,
        if \code{\link[base:logical]{FALSE}} only rows of non-preliminary
        phases are returned.
    }
  }
  \item{\code{get_type()}}{Get the control chart's type.
  }
  \item{remove_phase(id)}{Remove the phase with \code{id == id}.
  }
  \item{\code{set_name(name)}}{Set the control chart's name.
    \tabular{ll}{
      \code{name} \tab \code{\link[base:character]{Character}}. New name.
    }
  }
  \item{\code{set_phase_names(new_names, old_names = NULL)}}{Set the names
  of one or more control chart's phases. If \code{old_names = NULL} the
  length of \code{new_names} must be equal to the number of the control
  chart's phases, otherwise the length of \code{new_names} and \code{old_names}
  has to be equal.
    \tabular{ll}{
      \code{new_names} \tab \code{\link[base:character]{Character}}
      vector. \cr
      \code{old_names} \tab \code{\link[base:character]{Character}}
      vector or \code{\link[base:NULL]{NULL}}.
    }
  }
  \item{\code{set_type(type = c("xbar_R", "xbar_s", "R", "s", "p"))}}{Set
  the control chart's type.
    \tabular{ll}{
      \code{type} \tab \code{\link[base:character]{Character}}. New type.
    }
  }
}
}

