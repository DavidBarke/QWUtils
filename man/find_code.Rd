% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_code.R
\name{find_code}
\alias{find_code}
\title{Find scripts containing specific code}
\usage{
find_code(directory, pattern, recursive = TRUE, count = FALSE,
  indices = NULL, ending = ".*[.](r|R|s|S|q)([.](lnk|LNK))*$")
}
\arguments{
\item{directory}{A path to the directory containing the R scripts.}

\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:stringi-search-regex]{stringi::stringi-search-regex}. Control options with
\code{\link[=regex]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[=fixed]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[=coll]{coll()}} which
respects character matching rules for the specified locale.

Match character, word, line and sentence boundaries with
\code{\link[=boundary]{boundary()}}. An empty pattern, "", is equivalent to
\code{boundary("character")}.}

\item{recursive}{If \code{\link[base:logical]{TRUE}}, subdirectories are
recursively searched for R scripts.}

\item{count}{If \code{\link[base:logical]{TRUE}}, a vector with the number
of occurences per script is returned. If \code{\link[base:logical]{FALSE}},
a \code{\link[base:character]{character}} vector with the scripts containing
at least one occurence is returned.}

\item{indices}{\code{\link[base:integer]{Integer}} vector specifying the indices
of lines to be searched in each script. This is useful, if you get an Shiny
error indicating the line in which the error occured, but not the script. If
\code{\link[base]{NULL}} all lines of each script get searched.}
}
\description{
Find all the R scripts in a directory that contain some code as defined in
\code{pattern}. This is especially useful when functions are redesigned
and have to be adjusted in all scripts where they are used.
}
